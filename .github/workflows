name: Application CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Application Build
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Application Build
      run: mvnw clean package -DskipTests
      
  dependency_check:
    name: Application Dependency Check
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Application Dependency Check
      run: mvnw dependency-check:check
      
  unit_test:
    name: Application Unit Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Application Unit Test
      run: mvnw compiler:testCompile surefire:test
      
    - name: Archive Test Results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: "**/surefire-reports/*.xml"
        
  code_analysis:
    name: Application Code Analysis
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Application Code Analysis
      run: mvnw sonar:sonar -Dsonar.projectKey=Petclinic_Static_Code_Analysis -Dsonar.projectName=Petclinic_Static_Code_Analysis -PQP1
      
  static_security_testing:
    name: Application Static Security Testing
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Application Static Security Testing
      run: mvnw sonar:sonar -Dsonar.projectKey=Petclinic_SAST -Dsonar.projectName=Petclinic_SAST -PQP2
      
  deploy:
    name: Application Deploy
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Deploy Application
      run: |
        copy target\petclinic.war %TOMCAT_HOME%\webapps\
      
  dynamic_security_testing:
    name: Application Dynamic Security Testing
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Setup OWASP ZAP
      uses: zaproxy/actions/setup-zap@v1
      with:
        zap-version: latest
        
    - name: Start ZAP
      run: start_zap -daemon -host 127.0.0.1 -port ${{ secrets.OWASP_ZAP_PORT }} -config api.disablekey=true
      env:
        TOMCAT_PORT: ${{ secrets.TOMCAT_PORT }}
        
    - name: Wait for ZAP to Start
      run: sleep 45
      
    - name: Run ZAP Crawler
      run: run_zap_crawler -r "http://localhost:${{ secrets.TOMCAT_PORT }}/petclinic"
      
    - name: Run ZAP Active Scan
      run: run_zap_active_scan -r "http://localhost:${{ secrets.TOMCAT_PORT }}/petclinic"
      
    - name: Archive ZAP Results
      uses: actions/upload-artifact@v2
      with:
        name: zap-results
        path: ${{ github.workspace }}/zap/wrk/zapReport.html
